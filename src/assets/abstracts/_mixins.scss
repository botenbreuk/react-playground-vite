@function calc-rem($size) {
  $remSize: calc($size / 10px);
  @return $remSize * 1rem;
}

// =============================================================================
// String Replace
// =============================================================================

@function str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace +
      str-replace(
        str-slice($string, $index + str-length($search)),
        $search,
        $replace
      );
  }

  @return $string;
}

// =============================================================================
// Font Face
// =============================================================================

@mixin font-face(
  $name,
  $path,
  $weight: null,
  $style: null,
  $exts: eot woff2 woff ttf svg
) {
  $src: null;

  $extmods: (
    eot: '?',
    svg: '#' + str-replace($name, ' ', '_')
  );

  $formats: (
    otf: 'opentype',
    ttf: 'truetype'
  );

  @each $ext in $exts {
    $extmod: if(
      map-has-key($extmods, $ext),
      $ext + map-get($extmods, $ext),
      $ext
    );
    $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
    $src: append(
      $src,
      url(quote($path + '.' + $extmod)) format(quote($format)),
      comma
    );
  }

  @font-face {
    font-family: quote($name);
    font-style: $style;
    font-weight: $weight;
    src: $src;
  }
}

@mixin card-variant(
  $border,
  $heading-text-color,
  $heading-bg-color,
  $heading-border
) {
  border-color: $border;

  & > .card-header {
    color: $heading-text-color;
    background-color: $heading-bg-color;
    border-color: $heading-border;

    + .card-collapse > .card-body {
      border-top-color: $border;
    }

    .badge {
      color: $heading-bg-color;
      background-color: $heading-text-color;
    }
  }

  & > .card-footer {
    + .card-collapse > .card-body {
      border-bottom-color: $border;
    }
  }
}
